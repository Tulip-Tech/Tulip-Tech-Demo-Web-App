/**
 * This script generates all i18next resource entries.
 */

const fs = require('fs');
const path = require('path');

const localesPath = './src/i18n/locales';
const defaultLocale = 'en_US';

const fileHeader = `// This file is generated, do not modify manually.
// Run \`$ yarn i18next:scan\` to update this file

`;

const files = fs.readdirSync(localesPath);
const locales = files.filter((file) => !/\.ts/.test(file));

if (!locales.includes(defaultLocale)) {
  throw new Error('The default locale is missing from locales folder.');
}

const namespaces = fs.readdirSync(path.join(localesPath, defaultLocale)).filter((namespace) => !/_old\.json/.test(namespace)); // filter *_old namespaces generated by i18next-parser

locales.forEach((locale) => {
  const content = namespaces.reduce((contents, namespace) => {
    return contents + `export { default as ${namespace.replace('.json', '')} } from './${locale}/${namespace}';\n`;
  }, fileHeader);

  fs.writeFileSync(path.join(localesPath, `${locale}.ts`), content, { encoding: 'utf-8' });
});

console.info('');
console.info(`Generated entries for the following locales: ${locales.join(', ')}`);
console.info('');
